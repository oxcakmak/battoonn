const play = require("play-dl");
const urlParser = require("js-video-url-parser");
const { _ } = require("../../utils/localization");
const { addQueue, playSong } = require("../../vendor/queue");
const { formattedCurrentDateTime } = require("../../utils/dateFunctions");

module.exports = {
  name: "interactionCreate",
  async execute(interaction) {
    const { guild, message, channel } = await interaction;

    const member = await guild.members.fetch(interaction.user.id);

    if (!member) return;

    if (!interaction.isButton()) return;

    const customId = interaction.customId;

    // if (!interaction.isButton() && !customId.startsWith("btnMusicLine")) return;

    if (customId?.startsWith("btnMusicLine")) {
      try {
        const trackLineNumber = customId.slice("btnMusicLine".length);

        function getLineWithNumber(text, lineNumber) {
          if (lineNumber <= 0 || !text) return null; // Handle invalid input

          const lines = text.split("\n");
          if (lineNumber > lines.length) return null; // Handle out-of-bounds line number

          return lines[lineNumber - 1]; // Use zero-based indexing
        }

        const trackLine = await getLineWithNumber(
          message.embeds[0].data.description,
          trackLineNumber
        );

        const youtubeUrl = await findYoutubeUrl(trackLine).replace(")", "");

        const voiceState = member.voice;
        const currentChannel = interaction.member.voice.channel;

        if (
          !currentChannel ||
          !voiceState ||
          !voiceState.channel ||
          voiceState.channel.id !== currentChannel.id
        )
          return await interaction.editReply({
            content: _("you_must_the_audio_channel"),
          });

        // YTDL Section start
        let video = await play.video_info(
          await urlParser.create({
            videoInfo: urlParser.parse(youtubeUrl),
            format: "short",
          })
        );
        video = video.video_details;

        // let's defer the interaction as things can take time to process
        // await interaction.deferReply();
        const data = {
          server: interaction.guild.id,
          interaction: interaction,
          client: interaction.client,
          targetChannel: channel,
          message: message,
          currentChannel: currentChannel,
        };

        const song = {
          url: video.url,
          thumbnail: String(await video.thumbnails[0].url),
          title: video.title,
          channel: video.channel.name,
          duration: video.durationRaw,
          length: video.durationInSec,
          requestedBy: interaction.user.username,
          requestedById: interaction.user.id,
          requestedTime: formattedCurrentDateTime,
        };

        const sendData = {
          ...data,
          ...song,
        };

        await addQueue(sendData);

        await playSong(sendData);
      } catch (error) {
        console.log(error);
      }
    }
  },
};

function findYoutubeUrl(text) {
  const youtubeRegex =
    /(?:https?:\/\/)?(?:www\.)?youtu(?:\.be|be\.com)\/(watch\?v=)?([^\s&]+)/gi;
  const match = youtubeRegex.exec(text);

  if (match) {
    return match[0]; // Return the video ID (second capturing group)
  } else {
    return null;
  }
}
